package com.slate{	/*		Most of this code us taken directly from the Brightcove example at		http://support.brightcove.com/en/docs/creating-custom-player-components.	*/	import com.brightcove.api.APIModules;	import com.brightcove.api.BrightcoveModuleWrapper;	import com.brightcove.api.events.ExperienceEvent;	import com.brightcove.api.modules.ExperienceModule;	import flash.display.Sprite;	import flash.events.IEventDispatcher;	import flash.external.ExternalInterface;	public class TSGAnalyticsPlugin extends Sprite	{		//adNodes are appended to this		public static const DART_PATH:String = "http://ad.doubleclick.net/pfadx/";		private static var _host:String;		private static var _sVars:Object;		private var _experienceModule:ExperienceModule;		private var _player:BrightcoveModuleWrapper;		private var _tracker:VideoTracker;		private var _debugger:BrightcoveDebugger;				public function TSGAnalyticsPlugin():void{			trace("[TSGAnalyticsPlugin instantiated]");			//ExternalInterface.call("console.info", "[TSGAnalyticsPlugin instantiated]");			_host = ExternalInterface.call("function(){ return window.location.hostname;}");			trace("[TSGAnalyticsPlugin initialize] host detected " + _host);			trace("[TSGAnalyticsPlugin initialize] SVARS")			_sVars = Object(ExternalInterface.call("function(){"+				"return {"+				"eVar1:window.s.eVar1,"+				"eVar2:window.s.eVar2,"+				"eVar11:window.s.eVar11,"+				"eVar17:window.s.eVar17"+			"};}"));			trace(_sVars.eVar1);			trace(_sVars.eVar2);			if(typeof _sVars.eVar11 !== 'undefined'){				trace(_sVars.eVar11);			}			trace(_sVars.eVar17);		}				// all custom API interaction code goes here.		// gets called when API is ready		private function initialize():void		{			trace("[TSGAnalyticsPlugin initialize] API Ready");			//_debugger = new BrightcoveDebugger(_player);			_tracker = new VideoTracker(_player);			addChild(_tracker);		}		// called after API modules are loaded.		// if the API is not ready, it'll defer to when TEMPLATE_READY is fired 		//to call initialize		private function checkReady():void		{			if (_experienceModule.getReady())			{				initialize();			}			else			{				_experienceModule.addEventListener(ExperienceEvent.TEMPLATE_READY, onTemplateReady);			}		}		// when TEMPLATE_READY is fired, the API is good to go		// drop the listener and call initialize		private function onTemplateReady(event:ExperienceEvent):void		{			_experienceModule.removeEventListener(ExperienceEvent.TEMPLATE_READY, onTemplateReady);			initialize();		}		// called when the different API modules are loaded.		// after they are, make sure the API is fully loaded before proceeding		private function onModulesLoaded(event:ExperienceEvent):void		{			_player.removeEventListener(ExperienceEvent.MODULES_LOADED, onModulesLoaded);			_experienceModule = _player.getModule(APIModules.EXPERIENCE) as ExperienceModule;			if (_experienceModule != null)			{				checkReady();			}		}				// called when the Brightcove swf first loads		public function setInterface(player:IEventDispatcher):void		{			_player = new BrightcoveModuleWrapper(player);			_experienceModule = _player.getModule(APIModules.EXPERIENCE) as ExperienceModule;			if (_experienceModule == null)			{				_player.addEventListener(ExperienceEvent.MODULES_LOADED, onModulesLoaded);				_player.loadModules();			}			else			{				checkReady();			}		}				public static function get host():String		{		    return _host;		}		public static function get sVars():Object		{		    return _sVars;		}	}}